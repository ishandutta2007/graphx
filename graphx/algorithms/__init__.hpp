#include <graphx/algorithms.assortativity.hpp>  // import *
#include <graphx/algorithms.asteroidal.hpp>  // import *
#include <graphx/algorithms.boundary.hpp>  // import *
#include <graphx/algorithms.bridges.hpp>  // import *
#include <graphx/algorithms.chains.hpp>  // import *
#include <graphx/algorithms.centrality.hpp>  // import *
#include <graphx/algorithms.chordal.hpp>  // import *
#include <graphx/algorithms.cluster.hpp>  // import *
#include <graphx/algorithms.clique.hpp>  // import *
#include <graphx/algorithms.communicability_alg.hpp>  // import *
#include <graphx/algorithms.components.hpp>  // import *
#include <graphx/algorithms.coloring.hpp>  // import *
#include <graphx/algorithms.core.hpp>  // import *
#include <graphx/algorithms.covering.hpp>  // import *
#include <graphx/algorithms.cycles.hpp>  // import *
#include <graphx/algorithms.cuts.hpp>  // import *
#include <graphx/algorithms.d_separation.hpp>  // import *
#include <graphx/algorithms.dag.hpp>  // import *
#include <graphx/algorithms.distance_measures.hpp>  // import *
#include <graphx/algorithms.distance_regular.hpp>  // import *
#include <graphx/algorithms.dominance.hpp>  // import *
#include <graphx/algorithms.dominating.hpp>  // import *
#include <graphx/algorithms.efficiency_measures.hpp>  // import *
#include <graphx/algorithms.euler.hpp>  // import *
#include <graphx/algorithms.graphical.hpp>  // import *
#include <graphx/algorithms.hierarchy.hpp>  // import *
#include <graphx/algorithms.hybrid.hpp>  // import *
#include <graphx/algorithms.link_analysis.hpp>  // import *
#include <graphx/algorithms.link_prediction.hpp>  // import *
#include <graphx/algorithms.lowest_common_ancestors.hpp>  // import *
#include <graphx/algorithms.isolate.hpp>  // import *
#include <graphx/algorithms.matching.hpp>  // import *
#include <graphx/algorithms.minors.hpp>  // import *
#include <graphx/algorithms.mis.hpp>  // import *
#include <graphx/algorithms.moral.hpp>  // import *
#include <graphx/algorithms.non_randomness.hpp>  // import *
#include <graphx/algorithms.operators.hpp>  // import *
#include <graphx/algorithms.planarity.hpp>  // import *
#include <graphx/algorithms.planar_drawing.hpp>  // import *
#include <graphx/algorithms.reciprocity.hpp>  // import *
#include <graphx/algorithms.regular.hpp>  // import *
#include <graphx/algorithms.richclub.hpp>  // import *
#include <graphx/algorithms.shortest_paths.hpp>  // import *
#include <graphx/algorithms.similarity.hpp>  // import *
#include <graphx/algorithms.graph_hashing.hpp>  // import *
#include <graphx/algorithms.simple_paths.hpp>  // import *
#include <graphx/algorithms.smallworld.hpp>  // import *
#include <graphx/algorithms.smetric.hpp>  // import *
#include <graphx/algorithms.structuralholes.hpp>  // import *
#include <graphx/algorithms.sparsifiers.hpp>  // import *
#include <graphx/algorithms.summarization.hpp>  // import *
#include <graphx/algorithms.swap.hpp>  // import *
#include <graphx/algorithms.traversal.hpp>  // import *
#include <graphx/algorithms.triads.hpp>  // import *
#include <graphx/algorithms.vitality.hpp>  // import *
#include <graphx/algorithms.voronoi.hpp>  // import *
#include <graphx/algorithms.wiener.hpp>  // import *
#include <graphx/algorithms.polynomials.hpp>  // import *

// Make certain subpackages available to the user as direct imports from
// the `graphx` namespace.
#include <graphx/algorithms.hpp>  // import approximation
#include <graphx/algorithms.hpp>  // import assortativity
#include <graphx/algorithms.hpp>  // import bipartite
#include <graphx/algorithms.hpp>  // import node_classification
#include <graphx/algorithms.hpp>  // import centrality
#include <graphx/algorithms.hpp>  // import chordal
#include <graphx/algorithms.hpp>  // import cluster
#include <graphx/algorithms.hpp>  // import clique
#include <graphx/algorithms.hpp>  // import components
#include <graphx/algorithms.hpp>  // import connectivity
#include <graphx/algorithms.hpp>  // import community
#include <graphx/algorithms.hpp>  // import coloring
#include <graphx/algorithms.hpp>  // import flow
#include <graphx/algorithms.hpp>  // import isomorphism
#include <graphx/algorithms.hpp>  // import link_analysis
#include <graphx/algorithms.hpp>  // import lowest_common_ancestors
#include <graphx/algorithms.hpp>  // import operators
#include <graphx/algorithms.hpp>  // import shortest_paths
#include <graphx/algorithms.hpp>  // import tournament
#include <graphx/algorithms.hpp>  // import traversal
#include <graphx/algorithms.hpp>  // import tree

// Make certain functions from some of the previous subpackages available
// to the user as direct imports from the `graphx` namespace.
#include <graphx/algorithms.bipartite.hpp>  // import complete_bipartite_graph
#include <graphx/algorithms.bipartite.hpp>  // import is_bipartite
#include <graphx/algorithms.bipartite.hpp>  // import project
#include <graphx/algorithms.bipartite.hpp>  // import projected_graph
#include <graphx/algorithms.connectivity.hpp>  // import all_pairs_node_connectivity
#include <graphx/algorithms.connectivity.hpp>  // import all_node_cuts
#include <graphx/algorithms.connectivity.hpp>  // import average_node_connectivity
#include <graphx/algorithms.connectivity.hpp>  // import edge_connectivity
#include <graphx/algorithms.connectivity.hpp>  // import edge_disjoint_paths
#include <graphx/algorithms.connectivity.hpp>  // import k_components
#include <graphx/algorithms.connectivity.hpp>  // import k_edge_components
#include <graphx/algorithms.connectivity.hpp>  // import k_edge_subgraphs
#include <graphx/algorithms.connectivity.hpp>  // import k_edge_augmentation
#include <graphx/algorithms.connectivity.hpp>  // import is_k_edge_connected
#include <graphx/algorithms.connectivity.hpp>  // import minimum_edge_cut
#include <graphx/algorithms.connectivity.hpp>  // import minimum_node_cut
#include <graphx/algorithms.connectivity.hpp>  // import node_connectivity
#include <graphx/algorithms.connectivity.hpp>  // import node_disjoint_paths
#include <graphx/algorithms.connectivity.hpp>  // import stoer_wagner
#include <graphx/algorithms.flow.hpp>  // import capacity_scaling
#include <graphx/algorithms.flow.hpp>  // import cost_of_flow
#include <graphx/algorithms.flow.hpp>  // import gomory_hu_tree
#include <graphx/algorithms.flow.hpp>  // import max_flow_min_cost
#include <graphx/algorithms.flow.hpp>  // import maximum_flow
#include <graphx/algorithms.flow.hpp>  // import maximum_flow_value
#include <graphx/algorithms.flow.hpp>  // import min_cost_flow
#include <graphx/algorithms.flow.hpp>  // import min_cost_flow_cost
#include <graphx/algorithms.flow.hpp>  // import minimum_cut
#include <graphx/algorithms.flow.hpp>  // import minimum_cut_value
#include <graphx/algorithms.flow.hpp>  // import network_simplex
#include <graphx/algorithms.isomorphism.hpp>  // import could_be_isomorphic
#include <graphx/algorithms.isomorphism.hpp>  // import fast_could_be_isomorphic
#include <graphx/algorithms.isomorphism.hpp>  // import faster_could_be_isomorphic
#include <graphx/algorithms.isomorphism.hpp>  // import is_isomorphic
#include <graphx/algorithms.tree.branchings.hpp>  // import maximum_branching
#include <graphx/algorithms.tree.branchings.hpp>  // import maximum_spanning_arborescence
#include <graphx/algorithms.tree.branchings.hpp>  // import minimum_branching
#include <graphx/algorithms.tree.branchings.hpp>  // import minimum_spanning_arborescence
#include <graphx/algorithms.tree.branchings.hpp>  // import ArborescenceIterator
#include <graphx/algorithms.tree.coding.hpp>  // import *
#include <graphx/algorithms.tree.decomposition.hpp>  // import *
#include <graphx/algorithms.tree.mst.hpp>  // import *
#include <graphx/algorithms.tree.operations.hpp>  // import *
#include <graphx/algorithms.tree.recognition.hpp>  // import *
